/**
 * @fileoverview TypeScript type definitions for Apps Script namespace: Utilities.
 * This file was autogenerated by the Apps Script SDK.
 */


declare class Utilities {
  static base64Decode(encoded: string): number[];
  static base64Decode(encoded: string, charset: Utilities.Charset): number[];
  static base64DecodeWebSafe(encoded: string): number[];
  static base64DecodeWebSafe(encoded: string, charset: Utilities.Charset): number[];
  static base64Encode(data: number[]): string;
  static base64Encode(data: string): string;
  static base64Encode(data: string, charset: Utilities.Charset): string;
  static base64EncodeWebSafe(data: number[]): string;
  static base64EncodeWebSafe(data: string): string;
  static base64EncodeWebSafe(data: string, charset: Utilities.Charset): string;
  static computeDigest(algorithm: CommonModule.DigestAlgorithm, value: string): number[];
  static computeDigest(algorithm: CommonModule.DigestAlgorithm, value: string, charset: Utilities.Charset): number[];
  static computeHmacSha256Signature(value: string, key: string): number[];
  static computeHmacSha256Signature(value: string, key: string, charset: Utilities.Charset): number[];
  static computeHmacSignature(algorithm: Utilities.MacAlgorithm, value: string, key: string): number[];
  static computeHmacSignature(algorithm: Utilities.MacAlgorithm, value: string, key: string, charset: Utilities.Charset): number[];
  static computeRsaSha256Signature(value: string, key: string): number[];
  static computeRsaSha256Signature(value: string, key: string, charset: Utilities.Charset): number[];
  static formatDate(date: Date, timeZone: string, format: string): string;
  static formatString(template: string, ...args: any[]): string;
  static getUuid(): string;
  static jsonParse(jsonString: string): any;
  static jsonStringify(obj: any): string;
  static newBlob(data: number[]): CommonModule.Blob;
  static newBlob(data: number[], contentType: string): CommonModule.Blob;
  static newBlob(data: number[], contentType: string, name: string): CommonModule.Blob;
  static newBlob(data: string): CommonModule.Blob;
  static newBlob(data: string, contentType: string): CommonModule.Blob;
  static newBlob(data: string, contentType: string, name: string): CommonModule.Blob;
  static parseCsv(csv: string): string[][];
  static parseCsv(csv: string, delimiter: number): string[][];
  static sleep(milliseconds: number): void;
  static unzip(blob: CommonModule.BlobSource): CommonModule.Blob[];
  static zip(blobs: CommonModule.BlobSource[]): CommonModule.Blob;
  static zip(blobs: CommonModule.BlobSource[], name: string): CommonModule.Blob;
}

declare namespace Utilities {

  export enum Charset {

    US_ASCII,
    UTF_8

  }


  export enum MacAlgorithm {

    HMAC_MD5,
    HMAC_SHA_1,
    HMAC_SHA_256,
    HMAC_SHA_384,
    HMAC_SHA_512

  }


}